{"version":3,"sources":["components/Common.js","components/GeneralInfo.js","components/EducationalExperience.js","components/PracticalExperience.js","components/CV.js","App.js","index.js"],"names":["EditButton","this","props","mode","id","editEntry","specificID","className","onClick","e","Component","DeleteButton","deleteEntry","Name","name","handleChange","htmlFor","onChange","type","value","autoComplete","Email","email","Phone","phone","EducationalExperience","educations","addEducation","map","education","Education","schoolName","titleOfStudy","dateOfStudy","PracticalExperience","works","addWork","work","Work","companyName","positionTitle","mainTasks","dateFromAndUntil","CV","App","setState","state","text","target","matchingEducation","find","updatedEducations","forEach","document","getElementById","matchingWork","updatedWorks","filter","concat","uniqid","bind","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7e2b1fce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/Common.css';\n\nclass EditButton extends Component  {\n\n    render() {\n\n        const { mode, id, editEntry, specificID } = this.props;\n\n        return (\n            <button className=\"editButton\" onClick={(e) => editEntry(id, e, specificID)}>\n                {mode === 'read' ? <i id=\"edit\" className=\"fas fa-edit\"></i> : <i id=\"update\" className=\"far fa-check-square\"></i>}\n            </button>\n        );\n    }\n\n}\n\nclass DeleteButton extends Component {\n\n    render() {\n\n        const { id, deleteEntry, specificID } = this.props;\n\n        return (\n            <button className=\"deleteButton\" onClick={(e) => deleteEntry(id, e, specificID)}>\n                <i className=\"fas fa-trash-alt\"></i>\n            </button>\n        );\n\n    }\n}\n\n\nexport {\n    EditButton, \n    DeleteButton\n};","import React, { Component } from 'react';\nimport '../styles/GeneralInfo.css';\nimport { EditButton } from './Common';\n\n\nconst Name = (props) => {\n\n    const { mode, name, handleChange, editEntry } = props;\n\n    const id = 'name';\n\n\n    if (mode === 'read') { // cannot be just a universal mode.. needs to be specific\n        return (\n            <div className=\"generalInfo_name\">\n                <label htmlFor=\"nameInput\">Name: </label>\n                <span className=\"display\">{name}</span>\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n    else if (mode === 'edit') {\n        return (\n            <div className=\"generalInfo_name\">\n                <label htmlFor=\"nameInput\">Name: </label>\n                <input\n                    onChange={(e) => handleChange(id, e)}\n                    id=\"nameInput\"\n                    type=\"text\"\n                    value={name}\n                    autoComplete=\"off\"\n                />\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n};\n\n\nconst Email = (props) => {\n\n    const { mode, email, handleChange, editEntry } = props;\n\n    const id = 'email';\n\n    if (mode === 'read') {\n        return (\n            <div className=\"generalInfo_email\">\n                <label htmlFor=\"emailInput\">Email: </label>\n                <span className=\"display\">{email}</span>\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n    else if (mode === 'edit') {\n        return (\n            <div className=\"generalInfo_email\">\n                <label htmlFor=\"emailInput\">Email: </label>\n                <input\n                    onChange={(e) => handleChange(id, e)}\n                    id=\"emailInput\"\n                    type=\"text\"\n                    value={email}\n                    autoComplete=\"off\"\n                />\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n}\n\nconst Phone = (props) => {\n\n    const { mode, phone, handleChange, editEntry } = props;\n\n    const id = 'phone';\n\n    if (mode === 'read') {\n        return (\n            <div className=\"generalInfo_phone\">\n                <label htmlFor=\"phoneInput\">Phone: </label>\n                <span className=\"display\">{phone}</span>\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n    else if (mode === 'edit') {\n        return (\n            <div className=\"generalInfo_phone\">\n                <label htmlFor=\"emailInput\">Phone: </label>\n                <input\n                    onChange={(e) => handleChange(id, e)}\n                    id=\"phoneInput\"\n                    type=\"text\"\n                    value={phone}\n                    autoComplete=\"off\"\n                />\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }    \n\n}\n\n\nexport { \n    Name,\n    Email,\n    Phone\n };","import React, { Component } from 'react';\nimport { EditButton, DeleteButton } from './Common';\nimport '../styles/EducationalExperience.css';\n\nclass EducationalExperience extends Component {\n\n    render() {\n        \n        const { educations, addEducation, handleChange, editEntry, deleteEntry } = this.props;\n\n        const id = 'education';\n\n        return (\n            <div className=\"educationalExperience\">\n                <ul>\n                    {educations.map(education => {\n                        return (\n                            <li key={education.id} className=\"education\">\n                                <Education education={education} handleChange={handleChange} />\n                                <EditButton mode={education.mode} id={id} editEntry={editEntry} specificID={education.id} />\n                                <DeleteButton id={id} deleteEntry={deleteEntry} specificID={education.id} />\n                            </li>\n                        );\n                    })}\n                </ul>\n                <button className=\"addEducation\" onClick={addEducation}>Add Education</button>\n            </div>\n        );\n    }\n}\n\nconst Education = (props) => {\n\n    const { education, handleChange } = props;\n\n    const id = 'education';\n\n    if (education.mode === 'read') {\n        return (\n            <div>\n                <div>\n                    <span className=\"display\">{education.schoolName}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{education.titleOfStudy}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{education.dateOfStudy}</span>\n                </div>\n            </div>\n        );\n    } else if (education.mode === 'edit') {\n        return (\n            <div>\n                <div>\n                    <label htmlFor=\"schoolNameInput\">School Name: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, education.id)}\n                        className=\"display\"\n                        id=\"schoolNameInput\"\n                        type=\"text\"\n                        value={education.schoolName}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"titleOfStudyInput\">Title of Study: </label>\n                    <input \n                        onChange={(e) => handleChange(id, e, education.id)}\n                        className=\"display\"\n                        id=\"titleOfStudyInput\"\n                        type=\"text\"\n                        value={education.titleOfStudy}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"dateOfStudyInput\">Date of Study: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, education.id)}\n                        className=\"display\"\n                        id=\"dateOfStudyInput\"\n                        type=\"text\"\n                        value={education.dateOfStudy}\n                        autoComplete=\"off\"\n                    />\n                </div>\n            </div>\n        );  \n    }\n\n}\n\n\nexport default EducationalExperience;","import React, { Component } from 'react';\nimport { EditButton, DeleteButton } from './Common';\nimport '../styles/PracticalExperience.css';\n\nclass PracticalExperience extends Component {\n\n    render() {\n\n        const { works, addWork, handleChange, editEntry, deleteEntry } = this.props;\n\n        const id = 'work';\n\n        return (\n            <div className=\"practicalExperience\">\n                <ul>\n                    {works.map(work => {\n                        return (\n                            <li key={work.id} className=\"work\">\n                                <Work work={work} handleChange={handleChange} />\n                                <EditButton mode={work.mode} id={id} editEntry={editEntry} specificID={work.id} />\n                                <DeleteButton id={id} deleteEntry={deleteEntry} specificID={work.id} />\n                            </li>\n                        );\n                    })}\n                </ul>\n                <button className=\"addWork\" onClick={addWork}>Add Work</button>\n            </div>\n        );\n    }\n}\n\nconst Work = (props) => {\n\n    const { work, handleChange } = props;\n\n    const id = 'work';\n\n    if (work.mode === 'read') {\n        return (\n            <div>\n                <div>\n                    <span className=\"display\">{work.companyName}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{work.positionTitle}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{work.mainTasks}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{work.dateFromAndUntil}</span>\n                </div>\n            </div>\n        );\n    } else if (work.mode === 'edit') {\n        return (\n            <div>\n                <div>\n                    <label htmlFor=\"companyNameInput\">Company Name: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, work.id)}\n                        className=\"display\"\n                        id=\"companyNameInput\"\n                        type=\"text\"\n                        value={work.companyName}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"positionTitleInput\">Position Title: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, work.id)}\n                        className=\"display\"\n                        id=\"positionTitleInput\"\n                        type=\"text\"\n                        value={work.positionTitle}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"mainTasksInput\">Main Tasks: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, work.id)}\n                        className=\"display\"\n                        id=\"mainTasksInput\"\n                        type=\"text\"\n                        value={work.mainTasks}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"dateFromAndUntilInput\">Date From and Until: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, work.id)}\n                        className=\"display\"\n                        id=\"dateFromAndUntilInput\"\n                        type=\"text\"\n                        value={work.dateFromAndUntil}\n                        autoComplete=\"off\"\n                    />\n                </div>\n            </div>\n        );\n    }\n\n};\n\n\nexport default PracticalExperience;","import React, { Component } from 'react';\nimport '../styles/CV.css';\n\nclass CV extends Component {\n\n    render() {\n\n        const { name, email, phone, educations, works } = this.props;\n\n        return (\n            <div>\n                <div className=\"CV_name\">\n                    {name}\n                </div>\n                <div className=\"CV_email_phone\">\n                    {email} | {phone}\n                </div>\n                <div className=\"CV_practicalExperience_title\">EXPERIENCE</div>\n                <div className=\"CV_works\">\n                    <ul>\n                        {works.map(work => {\n                            return (\n                                <li key={work.id} className=\"CV_work\">\n                                    <div className=\"row\">\n                                        <div className=\"positionTitle_companyName\">\n                                            {work.positionTitle} at {work.companyName}\n                                        </div>\n                                        <div className=\"dateFromAndUntil\">\n                                            {work.dateFromAndUntil}\n                                        </div>\n                                    </div>\n                                    <div className=\"mainTasks\">\n                                        {work.mainTasks}\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n                <div className=\"CV_educationalExperience_title\">EDUCATION</div>\n                <div className=\"CV_educations\">\n                    <ul>\n                        {educations.map(education => {\n                            return (\n                                <li key={education.id} className=\"CV_education\">\n                                    <div className=\"row\">\n                                        <div className=\"schoolName\">\n                                            {education.schoolName}\n                                        </div>\n                                        <div className=\"dateOfStudy\">\n                                            {education.dateOfStudy}\n                                        </div>\n                                    </div>\n                                    <div className=\"titleOfStudy\">\n                                        {education.titleOfStudy}\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CV;","import React, { Component } from 'react';\nimport { Name, Email, Phone } from './components/GeneralInfo';\nimport EducationalExperience from './components/EducationalExperience';\nimport PracticalExperience from './components/PracticalExperience';\nimport CV from './components/CV';\nimport uniqid from 'uniqid';\nimport './styles/App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      // edit as individual\n      name: {\n        text: 'Name',\n        mode: 'read'\n      },\n      email: {\n        text: 'Email',\n        mode: 'read'\n      },\n      phone: {\n        text: 'Phone',\n        mode: 'read'\n      },\n\n      // edit as a group\n      education: {\n        mode: 'read',\n        id: uniqid(),\n        schoolName: 'School Name',\n        titleOfStudy: 'Title of Study',\n        dateOfStudy: 'Date of Study'\n      },\n\n      educations: [],\n\n      // edit as a group\n      work: {\n        mode: 'read',\n        id: uniqid(),\n        companyName: 'Company Name',\n        positionTitle: 'Position Title',\n        mainTasks: 'Main Tasks',\n        dateFromAndUntil: 'Date from and until'\n      },\n\n      works: [],\n\n\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.editEntry = this.editEntry.bind(this);\n    this.deleteEntry = this.deleteEntry.bind(this);\n    this.addEducation = this.addEducation.bind(this);\n    this.addWork = this.addWork.bind(this);\n  }\n\n\n  handleChange = (id, e, specificID) => {\n\n    if (id === 'name') {\n      this.setState((state) => {\n        return {\n            name: {\n              text: e.target.value,\n              mode: state.name.mode\n            }\n        }\n      });\n    }\n    else if (id === 'email') {\n      this.setState((state) => {\n        return {\n            email: {\n              text: e.target.value,\n              mode: state.email.mode \n            }\n        }\n      });\n    }\n    else if (id === 'phone') {\n      this.setState((state) => {\n        return {\n            phone: {\n              text: e.target.value,\n              mode: state.phone.mode \n            }\n        }\n      });\n    } else if (id === 'education') {\n\n      this.setState((state) => {\n\n        const matchingEducation = state.educations.find(education => education.id === specificID);\n\n        const updatedEducations = state.educations;\n\n        updatedEducations.forEach(education => {\n          if (education === matchingEducation) {\n            if (e.target.id === 'schoolNameInput') {\n              education.schoolName = document.getElementById('schoolNameInput').value;\n            } else if (e.target.id === 'titleOfStudyInput') {\n              education.titleOfStudy = document.getElementById('titleOfStudyInput').value;\n            } else if (e.target.id === 'dateOfStudyInput') {\n              education.dateOfStudy = document.getElementById('dateOfStudyInput').value;\n            }\n          }\n        });\n\n        return {\n          educations: updatedEducations\n        }\n\n      });\n    } else if (id === 'work') {\n\n      this.setState((state) => {\n\n        const matchingWork = state.works.find(work => work.id === specificID);\n\n        const updatedWorks = state.works;\n\n        updatedWorks.forEach(work => {\n          if (work === matchingWork) {\n            if (e.target.id === 'companyNameInput') {\n              work.companyName = document.getElementById('companyNameInput').value;\n            } else if (e.target.id === 'positionTitleInput') {\n              work.positionTitle = document.getElementById('positionTitleInput').value;\n            } else if (e.target.id === 'mainTasksInput') {\n              work.mainTasks = document.getElementById('mainTasksInput').value;\n            } else if (e.target.id === 'dateFromAndUntilInput') {\n              work.dateFromAndUntil = document.getElementById('dateFromAndUntilInput').value;\n            }\n          }\n        });\n\n        return {\n          works: updatedWorks\n        }\n\n      });\n    }\n\n  };\n\n  \n  editEntry = (id, e, specificID) => {\n\n    if (id === 'name') {\n\n      this.setState((state) => {\n        if (state.name.mode === 'read') {\n  \n          return {\n              name: {\n                text: state.name.text,\n                mode: 'edit'\n              }\n            };\n  \n        } else if (state.name.mode === 'edit') {\n  \n          return {\n              name: {\n                text: state.name.text,\n                mode: 'read'\n              }\n          };\n  \n        }\n      });\n      \n    } else if (id === 'email') {\n\n      this.setState((state) => {\n        if (state.email.mode === 'read') {\n  \n          return {\n              email: {\n                text: state.email.text,\n                mode: 'edit'\n              }\n          };\n  \n        } else if (state.email.mode === 'edit') {\n  \n          return {\n              email: {\n                text: state.email.text,\n                mode: 'read'\n              }\n          };\n  \n        }\n      });\n    } else if (id === 'phone') {\n\n      this.setState((state) => {\n        if (state.phone.mode === 'read') {\n  \n          return {\n              phone: {\n                text: state.phone.text,\n                mode: 'edit'\n              }\n          };\n  \n        } else if (state.phone.mode === 'edit') {\n  \n          return {\n              phone: {\n                text: state.phone.text,\n                mode: 'read'\n              }\n          };\n  \n        }\n      });\n\n    } else if (id === 'education') {\n\n      this.setState((state) => {\n\n        const matchingEducation = state.educations.find(education => education.id === specificID);\n  \n        const updatedEducations = state.educations;\n\n        updatedEducations.forEach(education => {\n          if (education === matchingEducation) {\n            if (e.target.id === 'edit') {\n              education.mode = 'edit';\n            } else if (e.target.id === 'update') {\n              education.mode = 'read';\n            }\n\n          }\n        });\n        \n        return {\n          educations: updatedEducations\n        };\n\n      });\n\n    } else if (id === 'work') {\n\n      this.setState((state) => {\n\n        const matchingWork = state.works.find(work => work.id === specificID);\n  \n        const updatedWorks = state.works;\n\n        updatedWorks.forEach(work => {\n          if (work === matchingWork) {\n            if (e.target.id === 'edit') {\n              work.mode = 'edit';\n            } else if (e.target.id === 'update') {\n              work.mode = 'read';\n            }\n\n          }\n        });\n        \n        return {\n          works: updatedWorks\n        };\n\n      });\n\n    }\n\n  };\n\n\n  deleteEntry = (id, e, specificID) => {\n\n    if (id === 'education') {\n      \n      this.setState((state) => {\n        return {\n          educations: state.educations.filter(education => education.id !== specificID)\n        };\n      });\n\n    } else if (id === 'work') {\n      \n      this.setState((state) => {\n        return {\n          works: state.works.filter(work => work.id !== specificID)\n        };\n      });\n\n    }\n\n  };\n\n\n\n\n  addEducation = () => {\n    this.setState({\n      educations: this.state.educations.concat(this.state.education),\n      education: {\n        mode: 'read',\n        id: uniqid(),\n        schoolName: 'School Name',\n        titleOfStudy: 'Title of Study',\n        dateOfStudy: 'Date of Study'\n      }\n    })\n  };\n\n\n  addWork = () => {\n    this.setState({\n      works: this.state.works.concat(this.state.work),\n      work: {\n        mode: 'read',\n        id: uniqid(),\n        companyName: 'Company Name',\n        positionTitle: 'Position Title',\n        mainTasks: 'Main Tasks',\n        dateFromAndUntil: 'Date from and until'\n      }\n    })\n  };\n\n\n\n  render() {\n\n    const { name, email, phone, education, educations, work, works} = this.state;\n\n    return (\n      <div className=\"main\">\n        <div className=\"left\">\n          <h2>General Information</h2>\n          <div>\n            <Name \n              mode={name.mode} \n              name={name.text} \n              handleChange={this.handleChange}\n              editEntry={this.editEntry}\n            />\n          </div>\n          <div>\n            <Email \n              mode={email.mode} \n              email={email.text} \n              handleChange={this.handleChange}\n              editEntry={this.editEntry}\n            />\n          </div>\n          <div>\n            <Phone\n              mode={phone.mode} \n              phone={phone.text} \n              handleChange={this.handleChange}\n              editEntry={this.editEntry}\n            />\n          </div>\n\n          <h2>Educational Experience</h2>\n          <div>\n            <EducationalExperience\n              educations={educations}\n              addEducation={this.addEducation}\n              handleChange={this.handleChange}\n              editEntry={this.editEntry}\n              deleteEntry={this.deleteEntry}\n            />\n          </div>\n\n          <h2>Practical Experience</h2>\n          <div>\n            <PracticalExperience\n              works={works}\n              addWork={this.addWork}\n              handleChange={this.handleChange}\n              editEntry={this.editEntry}\n              deleteEntry={this.deleteEntry}\n            />\n          </div>\n        </div>\n        <div className=\"right\">\n          <div className=\"container\">\n            <CV \n              name={name.text}\n              email={email.text}\n              phone={phone.text}\n              educations={educations}\n              works={works}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}