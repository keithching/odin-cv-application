{"version":3,"sources":["components/Common.js","components/GeneralInfo.js","components/EducationalExperience.js","components/PracticalExperience.js","components/CV.js","App.js","index.js"],"names":["EditButton","props","mode","id","editEntry","specificID","className","onClick","e","DeleteButton","deleteEntry","Name","name","handleChange","htmlFor","onChange","type","value","autoComplete","Email","email","Phone","phone","Education","education","schoolName","titleOfStudy","dateOfStudy","EducationalExperience","educations","addEducation","map","Work","work","companyName","positionTitle","mainTasks","dateFromAndUntil","PracticalExperience","works","addWork","CV","App","useState","text","setName","setEmail","setPhone","uniqid","setEducation","setEducations","setWork","setWorks","target","prevEducations","matchingEducation","find","prevEducation","updatedEducations","i","length","document","getElementById","prevWorks","matchingWork","updatedWorks","forEach","prevName","prevEmail","prevPhone","filter","concat","ReactDOM","render","StrictMode"],"mappings":"qTAGMA,EAAa,SAACC,GAAW,IAEnBC,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,GAAIC,EAA0BH,EAA1BG,UAAWC,EAAeJ,EAAfI,WAE7B,OACI,wBAAQC,UAAU,aAAaC,QAAS,SAACC,GAAD,OAAOJ,EAAUD,EAAIK,EAAGH,IAAhE,SACc,SAATH,EAAkB,mBAAGC,GAAG,OAAOG,UAAU,gBAAqB,mBAAGH,GAAG,SAASG,UAAU,2BAM9FG,EAAe,SAACR,GAAW,IAErBE,EAAgCF,EAAhCE,GAAIO,EAA4BT,EAA5BS,YAAaL,EAAeJ,EAAfI,WAEzB,OACI,wBAAQC,UAAU,eAAeC,QAAS,SAACC,GAAD,OAAOE,EAAYP,EAAIK,EAAGH,IAApE,SACI,mBAAGC,UAAU,wBChBnBK,EAAO,SAACV,GAAW,IAEbC,EAAwCD,EAAxCC,KAAMU,EAAkCX,EAAlCW,KAAMC,EAA4BZ,EAA5BY,aAAcT,EAAcH,EAAdG,UAE5BD,EAAK,OAGX,MAAa,SAATD,EAEI,sBAAKI,UAAU,mBAAf,UACI,uBAAOQ,QAAQ,YAAf,oBACA,sBAAMR,UAAU,UAAhB,SAA2BM,IAC3B,cAAC,EAAD,CAAYV,KAAMA,EAAMC,GAAIA,EAAIC,UAAWA,OAKrC,SAATF,EAED,sBAAKI,UAAU,mBAAf,UACI,uBAAOQ,QAAQ,YAAf,oBACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,IAClCL,GAAG,YACHa,KAAK,OACLC,MAAOL,EACPM,aAAa,QAEjB,cAAC,EAAD,CAAYhB,KAAMA,EAAMC,GAAIA,EAAIC,UAAWA,YAXlD,GAmBHe,EAAQ,SAAClB,GAAW,IAEdC,EAAyCD,EAAzCC,KAAMkB,EAAmCnB,EAAnCmB,MAAOP,EAA4BZ,EAA5BY,aAAcT,EAAcH,EAAdG,UAE7BD,EAAK,QAEX,MAAa,SAATD,EAEI,sBAAKI,UAAU,oBAAf,UACI,uBAAOQ,QAAQ,aAAf,qBACA,sBAAMR,UAAU,UAAhB,SAA2Bc,IAC3B,cAAC,EAAD,CAAYlB,KAAMA,EAAMC,GAAIA,EAAIC,UAAWA,OAKrC,SAATF,EAED,sBAAKI,UAAU,oBAAf,UACI,uBAAOQ,QAAQ,aAAf,qBACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,IAClCL,GAAG,aACHa,KAAK,OACLC,MAAOG,EACPF,aAAa,QAEjB,cAAC,EAAD,CAAYhB,KAAMA,EAAMC,GAAIA,EAAIC,UAAWA,YAXlD,GAkBHiB,EAAQ,SAACpB,GAAW,IAEdC,EAAyCD,EAAzCC,KAAMoB,EAAmCrB,EAAnCqB,MAAOT,EAA4BZ,EAA5BY,aAAcT,EAAcH,EAAdG,UAE7BD,EAAK,QAEX,MAAa,SAATD,EAEI,sBAAKI,UAAU,oBAAf,UACI,uBAAOQ,QAAQ,aAAf,qBACA,sBAAMR,UAAU,UAAhB,SAA2BgB,IAC3B,cAAC,EAAD,CAAYpB,KAAMA,EAAMC,GAAIA,EAAIC,UAAWA,OAKrC,SAATF,EAED,sBAAKI,UAAU,oBAAf,UACI,uBAAOQ,QAAQ,aAAf,qBACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,IAClCL,GAAG,aACHa,KAAK,OACLC,MAAOK,EACPJ,aAAa,QAEjB,cAAC,EAAD,CAAYhB,KAAMA,EAAMC,GAAIA,EAAIC,UAAWA,YAXlD,GC9DHmB,G,MAAY,SAACtB,GAAW,IAElBuB,EAA4BvB,EAA5BuB,UAAWX,EAAiBZ,EAAjBY,aAEbV,EAAK,YAEX,MAAuB,SAAnBqB,EAAUtB,KAEN,gCACI,8BACI,sBAAMI,UAAU,UAAhB,SAA2BkB,EAAUC,eAEzC,8BACI,sBAAMnB,UAAU,UAAhB,SAA2BkB,EAAUE,iBAEzC,8BACI,sBAAMpB,UAAU,UAAhB,SAA2BkB,EAAUG,mBAIvB,SAAnBH,EAAUtB,KAEb,gCACI,gCACI,uBAAOY,QAAQ,kBAAf,2BACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,EAAGgB,EAAUrB,KAC/CG,UAAU,UACVH,GAAG,kBACHa,KAAK,OACLC,MAAOO,EAAUC,WACjBP,aAAa,WAGrB,gCACI,uBAAOJ,QAAQ,oBAAf,8BACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,EAAGgB,EAAUrB,KAC/CG,UAAU,UACVH,GAAG,oBACHa,KAAK,OACLC,MAAOO,EAAUE,aACjBR,aAAa,WAGrB,gCACI,uBAAOJ,QAAQ,mBAAf,6BACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,EAAGgB,EAAUrB,KAC/CG,UAAU,UACVH,GAAG,mBACHa,KAAK,OACLC,MAAOO,EAAUG,YACjBT,aAAa,mBAjC1B,IA2CIU,EAvFe,SAAC3B,GAAW,IAE9B4B,EAAmE5B,EAAnE4B,WAAYC,EAAuD7B,EAAvD6B,aAAcjB,EAAyCZ,EAAzCY,aAAcT,EAA2BH,EAA3BG,UAAWM,EAAgBT,EAAhBS,YAErDP,EAAK,YAEX,OACI,sBAAKG,UAAU,wBAAf,UACI,6BACKuB,EAAWE,KAAI,SAAAP,GACZ,OACI,qBAAuBlB,UAAU,YAAjC,UACI,cAAC,EAAD,CAAWkB,UAAWA,EAAWX,aAAcA,IAC/C,cAAC,EAAD,CAAYX,KAAMsB,EAAUtB,KAAMC,GAAIA,EAAIC,UAAWA,EAAWC,WAAYmB,EAAUrB,KACtF,cAAC,EAAD,CAAcA,GAAIA,EAAIO,YAAaA,EAAaL,WAAYmB,EAAUrB,OAHjEqB,EAAUrB,SAQ/B,wBAAQG,UAAU,eAAeC,QAASuB,EAA1C,+BCKNE,G,MAAO,SAAC/B,GAAW,IAEbgC,EAAuBhC,EAAvBgC,KAAMpB,EAAiBZ,EAAjBY,aAERV,EAAK,OAEX,MAAkB,SAAd8B,EAAK/B,KAED,gCACI,8BACI,sBAAMI,UAAU,UAAhB,SAA2B2B,EAAKC,gBAEpC,8BACI,sBAAM5B,UAAU,UAAhB,SAA2B2B,EAAKE,kBAEpC,8BACI,sBAAM7B,UAAU,UAAhB,SAA2B2B,EAAKG,cAEpC,8BACI,sBAAM9B,UAAU,UAAhB,SAA2B2B,EAAKI,wBAIvB,SAAdJ,EAAK/B,KAER,gCACI,gCACI,uBAAOY,QAAQ,mBAAf,4BACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,EAAGyB,EAAK9B,KAC1CG,UAAU,UACVH,GAAG,mBACHa,KAAK,OACLC,MAAOgB,EAAKC,YACZhB,aAAa,WAGrB,gCACI,uBAAOJ,QAAQ,qBAAf,8BACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,EAAGyB,EAAK9B,KAC1CG,UAAU,UACVH,GAAG,qBACHa,KAAK,OACLC,MAAOgB,EAAKE,cACZjB,aAAa,WAGrB,gCACI,uBAAOJ,QAAQ,iBAAf,0BACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,EAAGyB,EAAK9B,KAC1CG,UAAU,UACVH,GAAG,iBACHa,KAAK,OACLC,MAAOgB,EAAKG,UACZlB,aAAa,WAGrB,gCACI,uBAAOJ,QAAQ,wBAAf,mCACA,uBACIC,SAAU,SAACP,GAAD,OAAOK,EAAaV,EAAIK,EAAGyB,EAAK9B,KAC1CG,UAAU,UACVH,GAAG,wBACHa,KAAK,OACLC,MAAOgB,EAAKI,iBACZnB,aAAa,mBA5C1B,IAsDIoB,EAtGa,SAACrC,GAAW,IAE5BsC,EAAyDtC,EAAzDsC,MAAOC,EAAkDvC,EAAlDuC,QAAS3B,EAAyCZ,EAAzCY,aAAcT,EAA2BH,EAA3BG,UAAWM,EAAgBT,EAAhBS,YAE3CP,EAAK,OAEX,OACI,sBAAKG,UAAU,sBAAf,UACI,6BACKiC,EAAMR,KAAI,SAAAE,GACP,OACI,qBAAkB3B,UAAU,OAA5B,UACI,cAAC,EAAD,CAAM2B,KAAMA,EAAMpB,aAAcA,IAChC,cAAC,EAAD,CAAYX,KAAM+B,EAAK/B,KAAMC,GAAIA,EAAIC,UAAWA,EAAWC,WAAY4B,EAAK9B,KAC5E,cAAC,EAAD,CAAcA,GAAIA,EAAIO,YAAaA,EAAaL,WAAY4B,EAAK9B,OAH5D8B,EAAK9B,SAQ1B,wBAAQG,UAAU,UAAUC,QAASiC,EAArC,0BCwCGC,G,MA5DJ,SAACxC,GAAW,IAEXW,EAA0CX,EAA1CW,KAAMQ,EAAoCnB,EAApCmB,MAAOE,EAA6BrB,EAA7BqB,MAAOO,EAAsB5B,EAAtB4B,WAAYU,EAAUtC,EAAVsC,MAExC,OACI,gCACI,qBAAKjC,UAAU,UAAf,SACKM,IAEL,sBAAKN,UAAU,iBAAf,UACKc,EADL,MACeE,KAEf,qBAAKhB,UAAU,+BAAf,wBACA,qBAAKA,UAAU,WAAf,SACI,6BACKiC,EAAMR,KAAI,SAAAE,GACP,OACI,qBAAkB3B,UAAU,UAA5B,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,4BAAf,UACK2B,EAAKE,cADV,OAC6BF,EAAKC,eAElC,qBAAK5B,UAAU,mBAAf,SACK2B,EAAKI,sBAGd,qBAAK/B,UAAU,YAAf,SACK2B,EAAKG,cAVLH,EAAK9B,WAiB9B,qBAAKG,UAAU,iCAAf,uBACA,qBAAKA,UAAU,gBAAf,SACI,6BACKuB,EAAWE,KAAI,SAAAP,GACZ,OACI,qBAAuBlB,UAAU,eAAjC,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,aAAf,SACKkB,EAAUC,aAEf,qBAAKnB,UAAU,cAAf,SACKkB,EAAUG,iBAGnB,qBAAKrB,UAAU,eAAf,SACKkB,EAAUE,iBAVVF,EAAUrB,gB,gBCyRhCuC,G,MA1TH,WAAO,IAAD,EAEUC,mBAAS,CACjCC,KAAM,OACN1C,KAAM,SAJQ,mBAERU,EAFQ,KAEFiC,EAFE,OAOWF,mBAAS,CAClCC,KAAM,QACN1C,KAAM,SATQ,mBAORkB,EAPQ,KAOD0B,EAPC,OAYYH,mBAAS,CACnCC,KAAM,QACN1C,KAAM,SAdQ,mBAYRoB,EAZQ,KAYDyB,EAZC,OAiBoBJ,mBAAS,CAC3CzC,KAAM,OACNC,GAAI6C,MACJvB,WAAY,cACZC,aAAc,iBACdC,YAAa,kBAtBC,mBAiBRH,EAjBQ,KAiBGyB,EAjBH,OAyBsBN,mBAAS,IAzB/B,mBAyBRd,EAzBQ,KAyBIqB,EAzBJ,OA2BUP,mBAAS,CACjCzC,KAAM,OACNC,GAAI6C,MACJd,YAAa,eACbC,cAAe,iBACfC,UAAW,aACXC,iBAAkB,wBAjCJ,mBA2BRJ,EA3BQ,KA2BFkB,EA3BE,OAoCYR,mBAAS,IApCrB,mBAoCRJ,EApCQ,KAoCDa,EApCC,KAuCVvC,EAAe,SAACV,EAAIK,EAAGH,GAEhB,SAAPF,EACF0C,EAAQ,CACND,KAAMpC,EAAE6C,OAAOpC,MACff,KAAMU,EAAKV,OAEG,UAAPC,EACT2C,EAAS,CACLF,KAAMpC,EAAE6C,OAAOpC,MACff,KAAMkB,EAAMlB,OAEA,UAAPC,EACP4C,EAAS,CACPH,KAAMpC,EAAE6C,OAAOpC,MACff,KAAMoB,EAAMpB,OAEA,cAAPC,EAET+C,GAAc,SAACI,GAIb,IAHA,IAAMC,EAAoBD,EAAeE,MAAK,SAAAC,GAAa,OAAIA,EAActD,KAAOE,KAC9EqD,EAAiB,YAAOJ,GAErBK,EAAI,EAAGA,EAAID,EAAkBE,OAAQD,IACxCD,EAAkBC,KAAOJ,IACP,oBAAhB/C,EAAE6C,OAAOlD,GACXuD,EAAkBC,GAAGlC,WAAaoC,SAASC,eAAe,mBAAmB7C,MACpD,sBAAhBT,EAAE6C,OAAOlD,GAClBuD,EAAkBC,GAAGjC,aAAemC,SAASC,eAAe,qBAAqB7C,MACxD,qBAAhBT,EAAE6C,OAAOlD,KAClBuD,EAAkBC,GAAGhC,YAAckC,SAASC,eAAe,oBAAoB7C,QAKrF,OAAOyC,KAIO,SAAPvD,GAETiD,GAAS,SAACW,GACR,IAAMC,EAAeD,EAAUP,MAAK,SAAAvB,GAAI,OAAIA,EAAK9B,KAAOE,KAClD4D,EAAY,YAAOF,GAgBzB,OAdAE,EAAaC,SAAQ,SAAAjC,GACfA,IAAS+B,IACS,qBAAhBxD,EAAE6C,OAAOlD,GACX8B,EAAKC,YAAc2B,SAASC,eAAe,oBAAoB7C,MACtC,uBAAhBT,EAAE6C,OAAOlD,GAClB8B,EAAKE,cAAgB0B,SAASC,eAAe,sBAAsB7C,MAC1C,mBAAhBT,EAAE6C,OAAOlD,GAClB8B,EAAKG,UAAYyB,SAASC,eAAe,kBAAkB7C,MAClC,0BAAhBT,EAAE6C,OAAOlD,KAClB8B,EAAKI,iBAAmBwB,SAASC,eAAe,yBAAyB7C,WAKxEgD,MAMP7D,EAAY,SAACD,EAAIK,EAAGH,GAEb,SAAPF,EAEF0C,GAAQ,SAACsB,GACP,MAAsB,SAAlBA,EAASjE,KACJ,CACL0C,KAAMuB,EAASvB,KACf1C,KAAM,QAEmB,SAAlBiE,EAASjE,KACX,CACL0C,KAAMuB,EAASvB,KACf1C,KAAM,aAHH,KAQO,UAAPC,EAET2C,GAAS,SAACsB,GACR,MAAuB,SAAnBA,EAAUlE,KACL,CACL0C,KAAMwB,EAAUxB,KAChB1C,KAAM,QAEoB,SAAnBkE,EAAUlE,KACZ,CACL0C,KAAMwB,EAAUxB,KAChB1C,KAAM,aAHH,KAQO,UAAPC,EAET4C,GAAS,SAACsB,GACR,MAAuB,SAAnBA,EAAUnE,KACL,CACL0C,KAAMyB,EAAUzB,KAChB1C,KAAM,QAEoB,SAAnBmE,EAAUnE,KACZ,CACL0C,KAAMyB,EAAUzB,KAChB1C,KAAM,aAHH,KAQO,cAAPC,EAET+C,GAAc,SAACI,GAKb,IAJA,IAAMC,EAAoBD,EAAeE,MAAK,SAAAC,GAAa,OAAIA,EAActD,KAAOE,KAC9EqD,EAAiB,YAAOJ,GAGrBK,EAAI,EAAGA,EAAID,EAAkBE,OAAQD,IACxCD,EAAkBC,KAAOJ,IACP,SAAhB/C,EAAE6C,OAAOlD,GACXuD,EAAkBC,GAAGzD,KAAO,OACH,WAAhBM,EAAE6C,OAAOlD,KAClBuD,EAAkBC,GAAGzD,KAAO,SAKlC,OAAOwD,KAGO,SAAPvD,GAETiD,GAAS,SAACW,GACR,IAAMC,EAAeD,EAAUP,MAAK,SAAAvB,GAAI,OAAIA,EAAK9B,KAAOE,KAClD4D,EAAY,YAAOF,GAYzB,OAVAE,EAAaC,SAAQ,SAAAjC,GACfA,IAAS+B,IACS,SAAhBxD,EAAE6C,OAAOlD,GACX8B,EAAK/B,KAAO,OACa,WAAhBM,EAAE6C,OAAOlD,KAClB8B,EAAK/B,KAAO,YAKX+D,MAMPvD,EAAc,SAACP,EAAIK,EAAGH,GAEf,cAAPF,EAEF+C,GAAc,WACZ,OAAOrB,EAAWyC,QAAO,SAAA9C,GAAS,OAAIA,EAAUrB,KAAOE,QAGzC,SAAPF,GAETiD,GAAS,WACP,OAAOb,EAAM+B,QAAO,SAAArC,GAAI,OAAIA,EAAK9B,KAAOE,SAuC9C,OACI,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qDACA,8BACE,cAAC,EAAD,CACEJ,KAAMU,EAAKV,KACXU,KAAMA,EAAKgC,KACX/B,aAAcA,EACdT,UAAWA,MAGf,8BACE,cAAC,EAAD,CACEF,KAAMkB,EAAMlB,KACZkB,MAAOA,EAAMwB,KACb/B,aAAcA,EACdT,UAAWA,MAGf,8BACE,cAAC,EAAD,CACEF,KAAMoB,EAAMpB,KACZoB,MAAOA,EAAMsB,KACb/B,aAAcA,EACdT,UAAWA,MAIf,wDACA,8BACE,cAAC,EAAD,CACEyB,WAAYA,EACZC,aAhES,WAEnBoB,EAAcrB,EAAW0C,OAAO/C,IAEhCyB,EAAa,CACX/C,KAAM,OACNC,GAAI6C,MACJvB,WAAY,cACZC,aAAc,iBACdC,YAAa,mBAwDLd,aAAcA,EACdT,UAAWA,EACXM,YAAaA,MAIjB,sDACA,8BACE,cAAC,EAAD,CACE6B,MAAOA,EACPC,QA5DI,WAEdY,EAASb,EAAMgC,OAAOtC,IAEtBkB,EAAQ,CACNjD,KAAM,OACNC,GAAI6C,MACJd,YAAa,eACbC,cAAe,iBACfC,UAAW,aACXC,iBAAkB,yBAmDVxB,aAAcA,EACdT,UAAWA,EACXM,YAAaA,SAInB,qBAAKJ,UAAU,QAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CACEM,KAAMA,EAAKgC,KACXxB,MAAOA,EAAMwB,KACbtB,MAAOA,EAAMsB,KACbf,WAAYA,EACZU,MAAOA,aCrTrBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASC,eAAe,W","file":"static/js/main.38f1dcd7.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Common.css';\n\nconst EditButton = (props) => {\n\n    const { mode, id, editEntry, specificID } = props;\n\n    return (\n        <button className=\"editButton\" onClick={(e) => editEntry(id, e, specificID)}>\n            {mode === 'read' ? <i id=\"edit\" className=\"fas fa-edit\"></i> : <i id=\"update\" className=\"far fa-check-square\"></i>}\n        </button>\n    );\n\n};\n\nconst DeleteButton = (props) => {\n\n    const { id, deleteEntry, specificID } = props;\n\n    return (\n        <button className=\"deleteButton\" onClick={(e) => deleteEntry(id, e, specificID)}>\n            <i className=\"fas fa-trash-alt\"></i>\n        </button>\n    );\n\n};\n\n\nexport {\n    EditButton, \n    DeleteButton\n};","import React from 'react';\nimport '../styles/GeneralInfo.css';\nimport { EditButton } from './Common';\n\n\nconst Name = (props) => {\n\n    const { mode, name, handleChange, editEntry } = props;\n\n    const id = 'name';\n\n\n    if (mode === 'read') { // cannot be just a universal mode.. needs to be specific\n        return (\n            <div className=\"generalInfo_name\">\n                <label htmlFor=\"nameInput\">Name: </label>\n                <span className=\"display\">{name}</span>\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n    else if (mode === 'edit') {\n        return (\n            <div className=\"generalInfo_name\">\n                <label htmlFor=\"nameInput\">Name: </label>\n                <input\n                    onChange={(e) => handleChange(id, e)}\n                    id=\"nameInput\"\n                    type=\"text\"\n                    value={name}\n                    autoComplete=\"off\"\n                />\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n};\n\n\nconst Email = (props) => {\n\n    const { mode, email, handleChange, editEntry } = props;\n\n    const id = 'email';\n\n    if (mode === 'read') {\n        return (\n            <div className=\"generalInfo_email\">\n                <label htmlFor=\"emailInput\">Email: </label>\n                <span className=\"display\">{email}</span>\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n    else if (mode === 'edit') {\n        return (\n            <div className=\"generalInfo_email\">\n                <label htmlFor=\"emailInput\">Email: </label>\n                <input\n                    onChange={(e) => handleChange(id, e)}\n                    id=\"emailInput\"\n                    type=\"text\"\n                    value={email}\n                    autoComplete=\"off\"\n                />\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n}\n\nconst Phone = (props) => {\n\n    const { mode, phone, handleChange, editEntry } = props;\n\n    const id = 'phone';\n\n    if (mode === 'read') {\n        return (\n            <div className=\"generalInfo_phone\">\n                <label htmlFor=\"phoneInput\">Phone: </label>\n                <span className=\"display\">{phone}</span>\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }\n\n    else if (mode === 'edit') {\n        return (\n            <div className=\"generalInfo_phone\">\n                <label htmlFor=\"emailInput\">Phone: </label>\n                <input\n                    onChange={(e) => handleChange(id, e)}\n                    id=\"phoneInput\"\n                    type=\"text\"\n                    value={phone}\n                    autoComplete=\"off\"\n                />\n                <EditButton mode={mode} id={id} editEntry={editEntry} />\n            </div>\n        );\n    }    \n\n}\n\n\nexport { \n    Name,\n    Email,\n    Phone\n };","import React from 'react';\nimport { EditButton, DeleteButton } from './Common';\nimport '../styles/EducationalExperience.css';\n\n\nconst EducationalExperience = (props) => {\n\n    const { educations, addEducation, handleChange, editEntry, deleteEntry } = props;\n\n    const id = 'education';\n\n    return (\n        <div className=\"educationalExperience\">\n            <ul>\n                {educations.map(education => {\n                    return (\n                        <li key={education.id} className=\"education\">\n                            <Education education={education} handleChange={handleChange} />\n                            <EditButton mode={education.mode} id={id} editEntry={editEntry} specificID={education.id} />\n                            <DeleteButton id={id} deleteEntry={deleteEntry} specificID={education.id} />\n                        </li>\n                    );\n                })}\n            </ul>\n            <button className=\"addEducation\" onClick={addEducation}>Add Education</button>\n        </div>\n    );\n};\n\nconst Education = (props) => {\n\n    const { education, handleChange } = props;\n\n    const id = 'education';\n\n    if (education.mode === 'read') {\n        return (\n            <div>\n                <div>\n                    <span className=\"display\">{education.schoolName}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{education.titleOfStudy}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{education.dateOfStudy}</span>\n                </div>\n            </div>\n        );\n    } else if (education.mode === 'edit') {\n        return (\n            <div>\n                <div>\n                    <label htmlFor=\"schoolNameInput\">School Name: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, education.id)}\n                        className=\"display\"\n                        id=\"schoolNameInput\"\n                        type=\"text\"\n                        value={education.schoolName}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"titleOfStudyInput\">Title of Study: </label>\n                    <input \n                        onChange={(e) => handleChange(id, e, education.id)}\n                        className=\"display\"\n                        id=\"titleOfStudyInput\"\n                        type=\"text\"\n                        value={education.titleOfStudy}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"dateOfStudyInput\">Date of Study: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, education.id)}\n                        className=\"display\"\n                        id=\"dateOfStudyInput\"\n                        type=\"text\"\n                        value={education.dateOfStudy}\n                        autoComplete=\"off\"\n                    />\n                </div>\n            </div>\n        );  \n    }\n\n}\n\n\nexport default EducationalExperience;","import React from 'react';\nimport { EditButton, DeleteButton } from './Common';\nimport '../styles/PracticalExperience.css';\n\nconst PracticalExperience = (props) => {\n\n    const { works, addWork, handleChange, editEntry, deleteEntry } = props;\n\n    const id = 'work';\n\n    return (\n        <div className=\"practicalExperience\">\n            <ul>\n                {works.map(work => {\n                    return (\n                        <li key={work.id} className=\"work\">\n                            <Work work={work} handleChange={handleChange} />\n                            <EditButton mode={work.mode} id={id} editEntry={editEntry} specificID={work.id} />\n                            <DeleteButton id={id} deleteEntry={deleteEntry} specificID={work.id} />\n                        </li>\n                    );\n                })}\n            </ul>\n            <button className=\"addWork\" onClick={addWork}>Add Work</button>\n        </div>\n    );\n\n};\n\nconst Work = (props) => {\n\n    const { work, handleChange } = props;\n\n    const id = 'work';\n\n    if (work.mode === 'read') {\n        return (\n            <div>\n                <div>\n                    <span className=\"display\">{work.companyName}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{work.positionTitle}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{work.mainTasks}</span>\n                </div>\n                <div>\n                    <span className=\"display\">{work.dateFromAndUntil}</span>\n                </div>\n            </div>\n        );\n    } else if (work.mode === 'edit') {\n        return (\n            <div>\n                <div>\n                    <label htmlFor=\"companyNameInput\">Company Name: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, work.id)}\n                        className=\"display\"\n                        id=\"companyNameInput\"\n                        type=\"text\"\n                        value={work.companyName}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"positionTitleInput\">Position Title: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, work.id)}\n                        className=\"display\"\n                        id=\"positionTitleInput\"\n                        type=\"text\"\n                        value={work.positionTitle}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"mainTasksInput\">Main Tasks: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, work.id)}\n                        className=\"display\"\n                        id=\"mainTasksInput\"\n                        type=\"text\"\n                        value={work.mainTasks}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"dateFromAndUntilInput\">Date From and Until: </label>\n                    <input\n                        onChange={(e) => handleChange(id, e, work.id)}\n                        className=\"display\"\n                        id=\"dateFromAndUntilInput\"\n                        type=\"text\"\n                        value={work.dateFromAndUntil}\n                        autoComplete=\"off\"\n                    />\n                </div>\n            </div>\n        );\n    }\n\n};\n\n\nexport default PracticalExperience;","import React from 'react';\nimport '../styles/CV.css';\n\nconst CV = (props) => {\n\n    const { name, email, phone, educations, works } = props;\n\n    return (\n        <div>\n            <div className=\"CV_name\">\n                {name}\n            </div>\n            <div className=\"CV_email_phone\">\n                {email} | {phone}\n            </div>\n            <div className=\"CV_practicalExperience_title\">EXPERIENCE</div>\n            <div className=\"CV_works\">\n                <ul>\n                    {works.map(work => {\n                        return (\n                            <li key={work.id} className=\"CV_work\">\n                                <div className=\"row\">\n                                    <div className=\"positionTitle_companyName\">\n                                        {work.positionTitle} at {work.companyName}\n                                    </div>\n                                    <div className=\"dateFromAndUntil\">\n                                        {work.dateFromAndUntil}\n                                    </div>\n                                </div>\n                                <div className=\"mainTasks\">\n                                    {work.mainTasks}\n                                </div>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n            <div className=\"CV_educationalExperience_title\">EDUCATION</div>\n            <div className=\"CV_educations\">\n                <ul>\n                    {educations.map(education => {\n                        return (\n                            <li key={education.id} className=\"CV_education\">\n                                <div className=\"row\">\n                                    <div className=\"schoolName\">\n                                        {education.schoolName}\n                                    </div>\n                                    <div className=\"dateOfStudy\">\n                                        {education.dateOfStudy}\n                                    </div>\n                                </div>\n                                <div className=\"titleOfStudy\">\n                                    {education.titleOfStudy}\n                                </div>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default CV;","import React, { useState } from 'react';\nimport { Name, Email, Phone } from './components/GeneralInfo';\nimport EducationalExperience from './components/EducationalExperience';\nimport PracticalExperience from './components/PracticalExperience';\nimport CV from './components/CV';\nimport uniqid from 'uniqid';\nimport './styles/App.css';\n\n\nconst App = () => {\n\n  const [ name, setName ] = useState({\n    text: 'Name',\n    mode: 'read'\n  });\n\n  const [ email, setEmail] = useState({\n    text: 'Email', \n    mode: 'read'\n  });\n\n  const [ phone, setPhone ] = useState({\n    text: 'Phone', \n    mode: 'read'  \n  });\n\n  const [ education, setEducation ] = useState({\n    mode: 'read',\n    id: uniqid(),\n    schoolName: 'School Name',\n    titleOfStudy: 'Title of Study',\n    dateOfStudy: 'Date of Study'\n  });\n\n  const [ educations, setEducations ] = useState([]);\n\n  const [ work, setWork ] = useState({\n    mode: 'read',\n    id: uniqid(),\n    companyName: 'Company Name',\n    positionTitle: 'Position Title',\n    mainTasks: 'Main Tasks',\n    dateFromAndUntil: 'Date from and until'\n  });\n\n  const [ works, setWorks ] = useState([]);\n\n\n  const handleChange = (id, e, specificID) => {\n\n    if (id === 'name') {\n      setName({\n        text: e.target.value,\n        mode: name.mode\n      });\n    } else if (id === 'email') {\n      setEmail({\n          text: e.target.value,\n          mode: email.mode \n      });\n    } else if (id === 'phone') {\n        setPhone({\n          text: e.target.value,\n          mode: phone.mode \n        });\n    } else if (id === 'education') {\n\n      setEducations((prevEducations) => {\n        const matchingEducation = prevEducations.find(prevEducation => prevEducation.id === specificID);\n        const updatedEducations = [...prevEducations];\n\n        for (let i = 0; i < updatedEducations.length; i++) {\n          if (updatedEducations[i] === matchingEducation) {\n            if (e.target.id === 'schoolNameInput') {\n              updatedEducations[i].schoolName = document.getElementById('schoolNameInput').value;\n            } else if (e.target.id === 'titleOfStudyInput') {\n              updatedEducations[i].titleOfStudy = document.getElementById('titleOfStudyInput').value;\n            } else if (e.target.id === 'dateOfStudyInput') {\n              updatedEducations[i].dateOfStudy = document.getElementById('dateOfStudyInput').value;\n            }\n          }\n        }\n        \n        return updatedEducations;\n      });\n\n\n    } else if (id === 'work') {\n\n      setWorks((prevWorks) => {\n        const matchingWork = prevWorks.find(work => work.id === specificID);\n        const updatedWorks = [...prevWorks];\n\n        updatedWorks.forEach(work => {\n          if (work === matchingWork) {\n            if (e.target.id === 'companyNameInput') {\n              work.companyName = document.getElementById('companyNameInput').value;\n            } else if (e.target.id === 'positionTitleInput') {\n              work.positionTitle = document.getElementById('positionTitleInput').value;\n            } else if (e.target.id === 'mainTasksInput') {\n              work.mainTasks = document.getElementById('mainTasksInput').value;\n            } else if (e.target.id === 'dateFromAndUntilInput') {\n              work.dateFromAndUntil = document.getElementById('dateFromAndUntilInput').value;\n            }\n          }\n        });\n\n        return updatedWorks;\n      });\n    }\n  };\n\n  \n  const editEntry = (id, e, specificID) => {\n\n    if (id === 'name') {\n\n      setName((prevName) => {\n        if (prevName.mode === 'read') {\n          return {\n            text: prevName.text,\n            mode: 'edit'\n          };\n        } else if (prevName.mode === 'edit') {\n          return {\n            text: prevName.text,\n            mode: 'read'\n          }\n        }\n      });\n      \n    } else if (id === 'email') {\n\n      setEmail((prevEmail) => {\n        if (prevEmail.mode === 'read') {\n          return {\n            text: prevEmail.text,\n            mode: 'edit'\n          };\n        } else if (prevEmail.mode === 'edit') {\n          return {\n            text: prevEmail.text,\n            mode: 'read'\n          };\n        }\n      });\n\n    } else if (id === 'phone') {\n\n      setPhone((prevPhone) => {\n        if (prevPhone.mode === 'read') {\n          return {\n            text: prevPhone.text,\n            mode: 'edit'\n          };\n        } else if (prevPhone.mode === 'edit') {\n          return {\n            text: prevPhone.text,\n            mode: 'read'\n          };\n        }\n      });\n\n    } else if (id === 'education') {\n\n      setEducations((prevEducations) => {\n        const matchingEducation = prevEducations.find(prevEducation => prevEducation.id === specificID);\n        const updatedEducations = [...prevEducations]; // spread the existing array into a new array\n        // https://stackoverflow.com/questions/56266575/why-is-usestate-not-triggering-re-render\n\n        for (let i = 0; i < updatedEducations.length; i++) {\n          if (updatedEducations[i] === matchingEducation) {\n            if (e.target.id === 'edit') {\n              updatedEducations[i].mode = 'edit';\n            } else if (e.target.id === 'update') {\n              updatedEducations[i].mode = 'read';\n            }\n          }\n        }\n\n        return updatedEducations;\n      });\n\n    } else if (id === 'work') {\n\n      setWorks((prevWorks) => {\n        const matchingWork = prevWorks.find(work => work.id === specificID);\n        const updatedWorks = [...prevWorks];\n\n        updatedWorks.forEach(work => {\n          if (work === matchingWork) {\n            if (e.target.id === 'edit') {\n              work.mode = 'edit';\n            } else if (e.target.id === 'update') {\n              work.mode = 'read';\n            }\n          }\n        });\n        \n        return updatedWorks;\n      });\n\n    }\n  };\n\n  const deleteEntry = (id, e, specificID) => {\n\n    if (id === 'education') {\n      \n      setEducations(() => {\n        return educations.filter(education => education.id !== specificID);\n      });\n\n    } else if (id === 'work') {\n      \n      setWorks(() => {\n        return works.filter(work => work.id !== specificID);\n      });\n\n    }\n\n  };\n\n\n  const addEducation = () => {\n\n    setEducations(educations.concat(education));\n\n    setEducation({\n      mode: 'read',\n      id: uniqid(),\n      schoolName: 'School Name',\n      titleOfStudy: 'Title of Study',\n      dateOfStudy: 'Date of Study'\n    });\n\n  };\n\n\n  const addWork = () => {\n\n    setWorks(works.concat(work));\n\n    setWork({\n      mode: 'read',\n      id: uniqid(),\n      companyName: 'Company Name',\n      positionTitle: 'Position Title',\n      mainTasks: 'Main Tasks',\n      dateFromAndUntil: 'Date from and until'\n    });\n\n  };\n\n\n  return (\n      <div className=\"main\">\n        <div className=\"left\">\n          <h2>General Information</h2>\n          <div>\n            <Name \n              mode={name.mode} \n              name={name.text} \n              handleChange={handleChange}\n              editEntry={editEntry}\n            />\n          </div>\n          <div>\n            <Email \n              mode={email.mode} \n              email={email.text} \n              handleChange={handleChange}\n              editEntry={editEntry}\n            />\n          </div>\n          <div>\n            <Phone\n              mode={phone.mode} \n              phone={phone.text} \n              handleChange={handleChange}\n              editEntry={editEntry}\n            />\n          </div>\n\n          <h2>Educational Experience</h2>\n          <div>\n            <EducationalExperience\n              educations={educations}\n              addEducation={addEducation}\n              handleChange={handleChange}\n              editEntry={editEntry}\n              deleteEntry={deleteEntry}\n            />\n          </div>\n\n          <h2>Practical Experience</h2>\n          <div>\n            <PracticalExperience\n              works={works}\n              addWork={addWork}\n              handleChange={handleChange}\n              editEntry={editEntry}\n              deleteEntry={deleteEntry}\n            />\n          </div>\n        </div>\n        <div className=\"right\">\n          <div className=\"container\">\n            <CV \n              name={name.text}\n              email={email.text}\n              phone={phone.text}\n              educations={educations}\n              works={works}\n            />\n          </div>\n        </div>\n      </div>\n  );\n\n};\n\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}